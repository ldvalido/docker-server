services:
  pihole:
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "8080:80/tcp"
      - "443:443/tcp"
    environment:
      TZ: 'America/Chicago'
      WEBPASSWORD: ${PORTAINER_PASSWORD}
    # Volumes store your data between container upgrades
    volumes:
       - pihole_data:/etc/pihole/
       - pihole_dnsmasq:/etc/dnsmasq.d/
    dns:
      - 127.0.0.1
      - 1.1.1.1
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
    networks:
      dockerserver_network:
        ipv4_address: 10.0.1.2
  samba:
    image: dperson/samba # no hay tag con versiones, solo latest
    restart: always
    command: '-u "${SAMBA_USER};${SAMBA_PASSWORD}" -s "shared;/shared;yes;no;no;leandro;;leandro;" -s "plex;/plex;yes;no;no;leandro;;leandro;"' 
    stdin_open: true
    tty: true
    environment:
      - TZ=America/Argentina/Buenos Aires
    ports:
      - 139:139
      - 445:445
    volumes:
      - ./shared:/shared
      - ../plex/plex_media/:/plex
    networks:
      dockerserver_network:
        ipv4_address: 10.0.1.5
  freqtrade:
    image: freqtradeorg/freqtrade:stable
    restart: unless-stopped
    container_name: freqtrade
    volumes:
      - "./user_data:/freqtrade/user_data"
    ports:
      - "8083:8080"
    # Default command used when running `docker compose up`
    command: >
      trade
      --logfile /freqtrade/user_data/logs/freqtrade.log
      --db-url sqlite:////freqtrade/user_data/tradesv3.sqlite
      --config /freqtrade/user_data/config.json
      --strategy SampleStrategy
    networks:
      dockerserver_network:
        ipv4_address: 10.0.1.3
  portainer:
    image: portainer/portainer-ce:2.21.0
    ports:
      - 9000:9000
      - 9443:9443
    restart: always
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      dockerserver_network:
        ipv4_address: 10.0.1.4
  uptime_kuma:
    image: louislam/uptime-kuma:1
    ports: 
    - 3001:3001
    restart: always
    volumes:
      - uptime-kuma:/app/data
    networks:
      dockerserver_network:
        ipv4_address: 10.0.1.7
  alpine_ftp:
    image: delfer/alpine-ftp-server
    ports:
    - 21:21
    environment:
      - USERS=${FTP_USERS}
    restart: always
    volumes:
      - ./shared:/ftp
    networks:
      dockerserver_network:
        ipv4_address: 10.0.1.6
volumes:
  pihole_data:
  pihole_dnsmasq:
  portainer_data:
  uptime-kuma:
networks:
  dockerserver_network:
      name: 'dockerserver_network'
      ipam:
          config:
            - subnet: 10.0.1.0/24
